/* soapLibServicePortBindingService.cpp
   Generated by gSOAP 2.7.16 from LibServicePort.h
   Copyright(C) 2000-2010, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/

#include "soapLibServicePortBindingService.h"

LibServicePortBindingService::LibServicePortBindingService()
{	LibServicePortBindingService_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

LibServicePortBindingService::LibServicePortBindingService(const struct soap &_soap) :soap(_soap)
{ }

LibServicePortBindingService::LibServicePortBindingService(soap_mode iomode)
{	LibServicePortBindingService_init(iomode, iomode);
}

LibServicePortBindingService::LibServicePortBindingService(soap_mode imode, soap_mode omode)
{	LibServicePortBindingService_init(imode, omode);
}

LibServicePortBindingService::~LibServicePortBindingService()
{ }

void LibServicePortBindingService::LibServicePortBindingService_init(soap_mode imode, soap_mode omode)
{	soap_imode(this, imode);
	soap_omode(this, omode);
	static const struct Namespace namespaces[] =
{
	{"SOAP-ENV", "http://schemas.xmlsoap.org/soap/envelope/", "http://www.w3.org/*/soap-envelope", NULL},
	{"SOAP-ENC", "http://schemas.xmlsoap.org/soap/encoding/", "http://www.w3.org/*/soap-encoding", NULL},
	{"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
	{"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
	{"ns1", "http://service.ws.hw.com/", NULL, NULL},
	{NULL, NULL, NULL, NULL}
};
	this->namespaces = namespaces;
};

void LibServicePortBindingService::destroy()
{	soap_destroy(this);
	soap_end(this);
}

LibServicePortBindingService *LibServicePortBindingService::copy()
{	LibServicePortBindingService *dup = SOAP_NEW_COPY(LibServicePortBindingService(*(struct soap*)this));
	return dup;
}

int LibServicePortBindingService::soap_close_socket()
{	return soap_closesock(this);
}

int LibServicePortBindingService::soap_senderfault(const char *string, const char *detailXML)
{	return ::soap_sender_fault(this, string, detailXML);
}

int LibServicePortBindingService::soap_senderfault(const char *subcodeQName, const char *string, const char *detailXML)
{	return ::soap_sender_fault_subcode(this, subcodeQName, string, detailXML);
}

int LibServicePortBindingService::soap_receiverfault(const char *string, const char *detailXML)
{	return ::soap_receiver_fault(this, string, detailXML);
}

int LibServicePortBindingService::soap_receiverfault(const char *subcodeQName, const char *string, const char *detailXML)
{	return ::soap_receiver_fault_subcode(this, subcodeQName, string, detailXML);
}

void LibServicePortBindingService::soap_print_fault(FILE *fd)
{	::soap_print_fault(this, fd);
}

#ifndef WITH_LEAN
void LibServicePortBindingService::soap_stream_fault(std::ostream& os)
{	::soap_stream_fault(this, os);
}

char *LibServicePortBindingService::soap_sprint_fault(char *buf, size_t len)
{	return ::soap_sprint_fault(this, buf, len);
}
#endif

void LibServicePortBindingService::soap_noheader()
{	header = NULL;
}

int LibServicePortBindingService::run(int port)
{	if (soap_valid_socket(bind(NULL, port, 100)))
	{	for (;;)
		{	if (!soap_valid_socket(accept()))
				return this->error;
			(void)serve();
			soap_destroy(this);
			soap_end(this);
		}
	}
	else
		return this->error;
	return SOAP_OK;
}

SOAP_SOCKET LibServicePortBindingService::bind(const char *host, int port, int backlog)
{	return soap_bind(this, host, port, backlog);
}

SOAP_SOCKET LibServicePortBindingService::accept()
{	return soap_accept(this);
}

int LibServicePortBindingService::serve()
{
#ifndef WITH_FASTCGI
	unsigned int k = this->max_keep_alive;
#endif
	do
	{	soap_begin(this);
#ifdef WITH_FASTCGI
		if (FCGI_Accept() < 0)
		{
			this->error = SOAP_EOF;
			return soap_send_fault(this);
		}
#endif

		soap_begin(this);

#ifndef WITH_FASTCGI
		if (this->max_keep_alive > 0 && !--k)
			this->keep_alive = 0;
#endif

		if (soap_begin_recv(this))
		{	if (this->error < SOAP_STOP)
			{
#ifdef WITH_FASTCGI
				soap_send_fault(this);
#else 
				return soap_send_fault(this);
#endif
			}
			soap_closesock(this);

			continue;
		}

		if (soap_envelope_begin_in(this)
		 || soap_recv_header(this)
		 || soap_body_begin_in(this)
		 || dispatch() || (this->fserveloop && this->fserveloop(this)))
		{
#ifdef WITH_FASTCGI
			soap_send_fault(this);
#else
			return soap_send_fault(this);
#endif
		}

#ifdef WITH_FASTCGI
		soap_destroy(this);
		soap_end(this);
	} while (1);
#else
	} while (this->keep_alive);
#endif
	return SOAP_OK;
}

static int serve___ns1__getReader(LibServicePortBindingService*);
static int serve___ns1__getItems(LibServicePortBindingService*);
static int serve___ns1__getBook(LibServicePortBindingService*);
static int serve___ns1__getCircs(LibServicePortBindingService*);
static int serve___ns1__getViolations(LibServicePortBindingService*);
static int serve___ns1__getDebts(LibServicePortBindingService*);
static int serve___ns1__getPregArrivals(LibServicePortBindingService*);
static int serve___ns1__getRelegateArrivals(LibServicePortBindingService*);
static int serve___ns1__getPregs(LibServicePortBindingService*);
static int serve___ns1__getRelegates(LibServicePortBindingService*);
static int serve___ns1__getAccounts(LibServicePortBindingService*);
static int serve___ns1__getLostPays(LibServicePortBindingService*);
static int serve___ns1__exceedFine(LibServicePortBindingService*);
static int serve___ns1__certLoss(LibServicePortBindingService*);
static int serve___ns1__logout(LibServicePortBindingService*);
static int serve___ns1__getLendHist(LibServicePortBindingService*);
static int serve___ns1__getMarc(LibServicePortBindingService*);
static int serve___ns1__checkReader(LibServicePortBindingService*);
static int serve___ns1__voltFine(LibServicePortBindingService*);
static int serve___ns1__getViolations1(LibServicePortBindingService*);
static int serve___ns1__exceedFine1(LibServicePortBindingService*);
static int serve___ns1__registerReader(LibServicePortBindingService*);
static int serve___ns1__getRedrTypes(LibServicePortBindingService*);
static int serve___ns1__getDeps(LibServicePortBindingService*);
static int serve___ns1__getAccounts1(LibServicePortBindingService*);

int LibServicePortBindingService::dispatch()
{	if (soap_peek_element(this))
		return this->error;
	if (!soap_match_tag(this, this->tag, "ns1:getReader"))
		return serve___ns1__getReader(this);
	if (!soap_match_tag(this, this->tag, "ns1:getItems"))
		return serve___ns1__getItems(this);
	if (!soap_match_tag(this, this->tag, "ns1:getBook"))
		return serve___ns1__getBook(this);
	if (!soap_match_tag(this, this->tag, "ns1:getCircs"))
		return serve___ns1__getCircs(this);
	if (!soap_match_tag(this, this->tag, "ns1:getViolations"))
		return serve___ns1__getViolations(this);
	if (!soap_match_tag(this, this->tag, "ns1:getDebts"))
		return serve___ns1__getDebts(this);
	if (!soap_match_tag(this, this->tag, "ns1:getPregArrivals"))
		return serve___ns1__getPregArrivals(this);
	if (!soap_match_tag(this, this->tag, "ns1:getRelegateArrivals"))
		return serve___ns1__getRelegateArrivals(this);
	if (!soap_match_tag(this, this->tag, "ns1:getPregs"))
		return serve___ns1__getPregs(this);
	if (!soap_match_tag(this, this->tag, "ns1:getRelegates"))
		return serve___ns1__getRelegates(this);
	if (!soap_match_tag(this, this->tag, "ns1:getAccounts"))
		return serve___ns1__getAccounts(this);
	if (!soap_match_tag(this, this->tag, "ns1:getLostPays"))
		return serve___ns1__getLostPays(this);
	if (!soap_match_tag(this, this->tag, "ns1:exceedFine"))
		return serve___ns1__exceedFine(this);
	if (!soap_match_tag(this, this->tag, "ns1:certLoss"))
		return serve___ns1__certLoss(this);
	if (!soap_match_tag(this, this->tag, "ns1:logout"))
		return serve___ns1__logout(this);
	if (!soap_match_tag(this, this->tag, "ns1:getLendHist"))
		return serve___ns1__getLendHist(this);
	if (!soap_match_tag(this, this->tag, "ns1:getMarc"))
		return serve___ns1__getMarc(this);
	if (!soap_match_tag(this, this->tag, "ns1:checkReader"))
		return serve___ns1__checkReader(this);
	if (!soap_match_tag(this, this->tag, "ns1:voltFine"))
		return serve___ns1__voltFine(this);
	if (!soap_match_tag(this, this->tag, "ns1:getViolations1"))
		return serve___ns1__getViolations1(this);
	if (!soap_match_tag(this, this->tag, "ns1:exceedFine1"))
		return serve___ns1__exceedFine1(this);
	if (!soap_match_tag(this, this->tag, "ns1:registerReader"))
		return serve___ns1__registerReader(this);
	if (!soap_match_tag(this, this->tag, "ns1:getRedrTypes"))
		return serve___ns1__getRedrTypes(this);
	if (!soap_match_tag(this, this->tag, "ns1:getDeps"))
		return serve___ns1__getDeps(this);
	if (!soap_match_tag(this, this->tag, "ns1:getAccounts1"))
		return serve___ns1__getAccounts1(this);
	return this->error = SOAP_NO_METHOD;
}

static int serve___ns1__getReader(LibServicePortBindingService *soap)
{	struct __ns1__getReader soap_tmp___ns1__getReader;
	ns1__getReaderResponse ns1__getReaderResponse_;
	ns1__getReaderResponse_.soap_default(soap);
	soap_default___ns1__getReader(soap, &soap_tmp___ns1__getReader);
	soap->encodingStyle = NULL;
	if (!soap_get___ns1__getReader(soap, &soap_tmp___ns1__getReader, "-ns1:getReader", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->getReader(soap_tmp___ns1__getReader.ns1__getReader_, &ns1__getReaderResponse_);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	ns1__getReaderResponse_.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__getReaderResponse_.soap_put(soap, "ns1:getReaderResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__getReaderResponse_.soap_put(soap, "ns1:getReaderResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__getItems(LibServicePortBindingService *soap)
{	struct __ns1__getItems soap_tmp___ns1__getItems;
	ns1__getItemsResponse ns1__getItemsResponse_;
	ns1__getItemsResponse_.soap_default(soap);
	soap_default___ns1__getItems(soap, &soap_tmp___ns1__getItems);
	soap->encodingStyle = NULL;
	if (!soap_get___ns1__getItems(soap, &soap_tmp___ns1__getItems, "-ns1:getItems", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->getItems(soap_tmp___ns1__getItems.ns1__getItems_, &ns1__getItemsResponse_);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	ns1__getItemsResponse_.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__getItemsResponse_.soap_put(soap, "ns1:getItemsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__getItemsResponse_.soap_put(soap, "ns1:getItemsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__getBook(LibServicePortBindingService *soap)
{	struct __ns1__getBook soap_tmp___ns1__getBook;
	ns1__getBookResponse ns1__getBookResponse_;
	ns1__getBookResponse_.soap_default(soap);
	soap_default___ns1__getBook(soap, &soap_tmp___ns1__getBook);
	soap->encodingStyle = NULL;
	if (!soap_get___ns1__getBook(soap, &soap_tmp___ns1__getBook, "-ns1:getBook", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->getBook(soap_tmp___ns1__getBook.ns1__getBook_, &ns1__getBookResponse_);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	ns1__getBookResponse_.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__getBookResponse_.soap_put(soap, "ns1:getBookResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__getBookResponse_.soap_put(soap, "ns1:getBookResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__getCircs(LibServicePortBindingService *soap)
{	struct __ns1__getCircs soap_tmp___ns1__getCircs;
	ns1__getCircsResponse ns1__getCircsResponse_;
	ns1__getCircsResponse_.soap_default(soap);
	soap_default___ns1__getCircs(soap, &soap_tmp___ns1__getCircs);
	soap->encodingStyle = NULL;
	if (!soap_get___ns1__getCircs(soap, &soap_tmp___ns1__getCircs, "-ns1:getCircs", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->getCircs(soap_tmp___ns1__getCircs.ns1__getCircs_, &ns1__getCircsResponse_);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	ns1__getCircsResponse_.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__getCircsResponse_.soap_put(soap, "ns1:getCircsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__getCircsResponse_.soap_put(soap, "ns1:getCircsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__getViolations(LibServicePortBindingService *soap)
{	struct __ns1__getViolations soap_tmp___ns1__getViolations;
	ns1__getViolationsResponse ns1__getViolationsResponse_;
	ns1__getViolationsResponse_.soap_default(soap);
	soap_default___ns1__getViolations(soap, &soap_tmp___ns1__getViolations);
	soap->encodingStyle = NULL;
	if (!soap_get___ns1__getViolations(soap, &soap_tmp___ns1__getViolations, "-ns1:getViolations", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->getViolations(soap_tmp___ns1__getViolations.ns1__getViolations_, &ns1__getViolationsResponse_);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	ns1__getViolationsResponse_.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__getViolationsResponse_.soap_put(soap, "ns1:getViolationsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__getViolationsResponse_.soap_put(soap, "ns1:getViolationsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__getDebts(LibServicePortBindingService *soap)
{	struct __ns1__getDebts soap_tmp___ns1__getDebts;
	ns1__getDebtsResponse ns1__getDebtsResponse_;
	ns1__getDebtsResponse_.soap_default(soap);
	soap_default___ns1__getDebts(soap, &soap_tmp___ns1__getDebts);
	soap->encodingStyle = NULL;
	if (!soap_get___ns1__getDebts(soap, &soap_tmp___ns1__getDebts, "-ns1:getDebts", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->getDebts(soap_tmp___ns1__getDebts.ns1__getDebts_, &ns1__getDebtsResponse_);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	ns1__getDebtsResponse_.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__getDebtsResponse_.soap_put(soap, "ns1:getDebtsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__getDebtsResponse_.soap_put(soap, "ns1:getDebtsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__getPregArrivals(LibServicePortBindingService *soap)
{	struct __ns1__getPregArrivals soap_tmp___ns1__getPregArrivals;
	ns1__getPregArrivalsResponse ns1__getPregArrivalsResponse_;
	ns1__getPregArrivalsResponse_.soap_default(soap);
	soap_default___ns1__getPregArrivals(soap, &soap_tmp___ns1__getPregArrivals);
	soap->encodingStyle = NULL;
	if (!soap_get___ns1__getPregArrivals(soap, &soap_tmp___ns1__getPregArrivals, "-ns1:getPregArrivals", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->getPregArrivals(soap_tmp___ns1__getPregArrivals.ns1__getPregArrivals_, &ns1__getPregArrivalsResponse_);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	ns1__getPregArrivalsResponse_.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__getPregArrivalsResponse_.soap_put(soap, "ns1:getPregArrivalsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__getPregArrivalsResponse_.soap_put(soap, "ns1:getPregArrivalsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__getRelegateArrivals(LibServicePortBindingService *soap)
{	struct __ns1__getRelegateArrivals soap_tmp___ns1__getRelegateArrivals;
	ns1__getRelegateArrivalsResponse ns1__getRelegateArrivalsResponse_;
	ns1__getRelegateArrivalsResponse_.soap_default(soap);
	soap_default___ns1__getRelegateArrivals(soap, &soap_tmp___ns1__getRelegateArrivals);
	soap->encodingStyle = NULL;
	if (!soap_get___ns1__getRelegateArrivals(soap, &soap_tmp___ns1__getRelegateArrivals, "-ns1:getRelegateArrivals", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->getRelegateArrivals(soap_tmp___ns1__getRelegateArrivals.ns1__getRelegateArrivals_, &ns1__getRelegateArrivalsResponse_);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	ns1__getRelegateArrivalsResponse_.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__getRelegateArrivalsResponse_.soap_put(soap, "ns1:getRelegateArrivalsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__getRelegateArrivalsResponse_.soap_put(soap, "ns1:getRelegateArrivalsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__getPregs(LibServicePortBindingService *soap)
{	struct __ns1__getPregs soap_tmp___ns1__getPregs;
	ns1__getPregsResponse ns1__getPregsResponse_;
	ns1__getPregsResponse_.soap_default(soap);
	soap_default___ns1__getPregs(soap, &soap_tmp___ns1__getPregs);
	soap->encodingStyle = NULL;
	if (!soap_get___ns1__getPregs(soap, &soap_tmp___ns1__getPregs, "-ns1:getPregs", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->getPregs(soap_tmp___ns1__getPregs.ns1__getPregs_, &ns1__getPregsResponse_);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	ns1__getPregsResponse_.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__getPregsResponse_.soap_put(soap, "ns1:getPregsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__getPregsResponse_.soap_put(soap, "ns1:getPregsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__getRelegates(LibServicePortBindingService *soap)
{	struct __ns1__getRelegates soap_tmp___ns1__getRelegates;
	ns1__getRelegatesResponse ns1__getRelegatesResponse_;
	ns1__getRelegatesResponse_.soap_default(soap);
	soap_default___ns1__getRelegates(soap, &soap_tmp___ns1__getRelegates);
	soap->encodingStyle = NULL;
	if (!soap_get___ns1__getRelegates(soap, &soap_tmp___ns1__getRelegates, "-ns1:getRelegates", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->getRelegates(soap_tmp___ns1__getRelegates.ns1__getRelegates_, &ns1__getRelegatesResponse_);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	ns1__getRelegatesResponse_.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__getRelegatesResponse_.soap_put(soap, "ns1:getRelegatesResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__getRelegatesResponse_.soap_put(soap, "ns1:getRelegatesResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__getAccounts(LibServicePortBindingService *soap)
{	struct __ns1__getAccounts soap_tmp___ns1__getAccounts;
	ns1__getAccountsResponse ns1__getAccountsResponse_;
	ns1__getAccountsResponse_.soap_default(soap);
	soap_default___ns1__getAccounts(soap, &soap_tmp___ns1__getAccounts);
	soap->encodingStyle = NULL;
	if (!soap_get___ns1__getAccounts(soap, &soap_tmp___ns1__getAccounts, "-ns1:getAccounts", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->getAccounts(soap_tmp___ns1__getAccounts.ns1__getAccounts_, &ns1__getAccountsResponse_);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	ns1__getAccountsResponse_.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__getAccountsResponse_.soap_put(soap, "ns1:getAccountsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__getAccountsResponse_.soap_put(soap, "ns1:getAccountsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__getLostPays(LibServicePortBindingService *soap)
{	struct __ns1__getLostPays soap_tmp___ns1__getLostPays;
	ns1__getLostPaysResponse ns1__getLostPaysResponse_;
	ns1__getLostPaysResponse_.soap_default(soap);
	soap_default___ns1__getLostPays(soap, &soap_tmp___ns1__getLostPays);
	soap->encodingStyle = NULL;
	if (!soap_get___ns1__getLostPays(soap, &soap_tmp___ns1__getLostPays, "-ns1:getLostPays", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->getLostPays(soap_tmp___ns1__getLostPays.ns1__getLostPays_, &ns1__getLostPaysResponse_);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	ns1__getLostPaysResponse_.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__getLostPaysResponse_.soap_put(soap, "ns1:getLostPaysResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__getLostPaysResponse_.soap_put(soap, "ns1:getLostPaysResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__exceedFine(LibServicePortBindingService *soap)
{	struct __ns1__exceedFine soap_tmp___ns1__exceedFine;
	ns1__exceedFineResponse ns1__exceedFineResponse_;
	ns1__exceedFineResponse_.soap_default(soap);
	soap_default___ns1__exceedFine(soap, &soap_tmp___ns1__exceedFine);
	soap->encodingStyle = NULL;
	if (!soap_get___ns1__exceedFine(soap, &soap_tmp___ns1__exceedFine, "-ns1:exceedFine", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->exceedFine(soap_tmp___ns1__exceedFine.ns1__exceedFine_, &ns1__exceedFineResponse_);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	ns1__exceedFineResponse_.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__exceedFineResponse_.soap_put(soap, "ns1:exceedFineResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__exceedFineResponse_.soap_put(soap, "ns1:exceedFineResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__certLoss(LibServicePortBindingService *soap)
{	struct __ns1__certLoss soap_tmp___ns1__certLoss;
	ns1__certLossResponse ns1__certLossResponse_;
	ns1__certLossResponse_.soap_default(soap);
	soap_default___ns1__certLoss(soap, &soap_tmp___ns1__certLoss);
	soap->encodingStyle = NULL;
	if (!soap_get___ns1__certLoss(soap, &soap_tmp___ns1__certLoss, "-ns1:certLoss", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->certLoss(soap_tmp___ns1__certLoss.ns1__certLoss_, &ns1__certLossResponse_);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	ns1__certLossResponse_.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__certLossResponse_.soap_put(soap, "ns1:certLossResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__certLossResponse_.soap_put(soap, "ns1:certLossResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__logout(LibServicePortBindingService *soap)
{	struct __ns1__logout soap_tmp___ns1__logout;
	ns1__logoutResponse ns1__logoutResponse_;
	ns1__logoutResponse_.soap_default(soap);
	soap_default___ns1__logout(soap, &soap_tmp___ns1__logout);
	soap->encodingStyle = NULL;
	if (!soap_get___ns1__logout(soap, &soap_tmp___ns1__logout, "-ns1:logout", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->logout(soap_tmp___ns1__logout.ns1__logout_, &ns1__logoutResponse_);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	ns1__logoutResponse_.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__logoutResponse_.soap_put(soap, "ns1:logoutResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__logoutResponse_.soap_put(soap, "ns1:logoutResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__getLendHist(LibServicePortBindingService *soap)
{	struct __ns1__getLendHist soap_tmp___ns1__getLendHist;
	ns1__getLendHistResponse ns1__getLendHistResponse_;
	ns1__getLendHistResponse_.soap_default(soap);
	soap_default___ns1__getLendHist(soap, &soap_tmp___ns1__getLendHist);
	soap->encodingStyle = NULL;
	if (!soap_get___ns1__getLendHist(soap, &soap_tmp___ns1__getLendHist, "-ns1:getLendHist", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->getLendHist(soap_tmp___ns1__getLendHist.ns1__getLendHist_, &ns1__getLendHistResponse_);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	ns1__getLendHistResponse_.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__getLendHistResponse_.soap_put(soap, "ns1:getLendHistResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__getLendHistResponse_.soap_put(soap, "ns1:getLendHistResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__getMarc(LibServicePortBindingService *soap)
{	struct __ns1__getMarc soap_tmp___ns1__getMarc;
	ns1__getMarcResponse ns1__getMarcResponse_;
	ns1__getMarcResponse_.soap_default(soap);
	soap_default___ns1__getMarc(soap, &soap_tmp___ns1__getMarc);
	soap->encodingStyle = NULL;
	if (!soap_get___ns1__getMarc(soap, &soap_tmp___ns1__getMarc, "-ns1:getMarc", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->getMarc(soap_tmp___ns1__getMarc.ns1__getMarc_, &ns1__getMarcResponse_);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	ns1__getMarcResponse_.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__getMarcResponse_.soap_put(soap, "ns1:getMarcResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__getMarcResponse_.soap_put(soap, "ns1:getMarcResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__checkReader(LibServicePortBindingService *soap)
{	struct __ns1__checkReader soap_tmp___ns1__checkReader;
	ns1__checkReaderResponse ns1__checkReaderResponse_;
	ns1__checkReaderResponse_.soap_default(soap);
	soap_default___ns1__checkReader(soap, &soap_tmp___ns1__checkReader);
	soap->encodingStyle = NULL;
	if (!soap_get___ns1__checkReader(soap, &soap_tmp___ns1__checkReader, "-ns1:checkReader", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->checkReader(soap_tmp___ns1__checkReader.ns1__checkReader_, &ns1__checkReaderResponse_);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	ns1__checkReaderResponse_.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__checkReaderResponse_.soap_put(soap, "ns1:checkReaderResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__checkReaderResponse_.soap_put(soap, "ns1:checkReaderResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__voltFine(LibServicePortBindingService *soap)
{	struct __ns1__voltFine soap_tmp___ns1__voltFine;
	ns1__voltFineResponse ns1__voltFineResponse_;
	ns1__voltFineResponse_.soap_default(soap);
	soap_default___ns1__voltFine(soap, &soap_tmp___ns1__voltFine);
	soap->encodingStyle = NULL;
	if (!soap_get___ns1__voltFine(soap, &soap_tmp___ns1__voltFine, "-ns1:voltFine", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->voltFine(soap_tmp___ns1__voltFine.ns1__voltFine_, &ns1__voltFineResponse_);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	ns1__voltFineResponse_.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__voltFineResponse_.soap_put(soap, "ns1:voltFineResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__voltFineResponse_.soap_put(soap, "ns1:voltFineResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__getViolations1(LibServicePortBindingService *soap)
{	struct __ns1__getViolations1 soap_tmp___ns1__getViolations1;
	ns1__getViolations1Response ns1__getViolations1Response_;
	ns1__getViolations1Response_.soap_default(soap);
	soap_default___ns1__getViolations1(soap, &soap_tmp___ns1__getViolations1);
	soap->encodingStyle = NULL;
	if (!soap_get___ns1__getViolations1(soap, &soap_tmp___ns1__getViolations1, "-ns1:getViolations1", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->getViolations1(soap_tmp___ns1__getViolations1.ns1__getViolations1_, &ns1__getViolations1Response_);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	ns1__getViolations1Response_.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__getViolations1Response_.soap_put(soap, "ns1:getViolations1Response", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__getViolations1Response_.soap_put(soap, "ns1:getViolations1Response", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__exceedFine1(LibServicePortBindingService *soap)
{	struct __ns1__exceedFine1 soap_tmp___ns1__exceedFine1;
	ns1__exceedFine1Response ns1__exceedFine1Response_;
	ns1__exceedFine1Response_.soap_default(soap);
	soap_default___ns1__exceedFine1(soap, &soap_tmp___ns1__exceedFine1);
	soap->encodingStyle = NULL;
	if (!soap_get___ns1__exceedFine1(soap, &soap_tmp___ns1__exceedFine1, "-ns1:exceedFine1", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->exceedFine1(soap_tmp___ns1__exceedFine1.ns1__exceedFine1_, &ns1__exceedFine1Response_);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	ns1__exceedFine1Response_.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__exceedFine1Response_.soap_put(soap, "ns1:exceedFine1Response", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__exceedFine1Response_.soap_put(soap, "ns1:exceedFine1Response", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__registerReader(LibServicePortBindingService *soap)
{	struct __ns1__registerReader soap_tmp___ns1__registerReader;
	ns1__registerReaderResponse ns1__registerReaderResponse_;
	ns1__registerReaderResponse_.soap_default(soap);
	soap_default___ns1__registerReader(soap, &soap_tmp___ns1__registerReader);
	soap->encodingStyle = NULL;
	if (!soap_get___ns1__registerReader(soap, &soap_tmp___ns1__registerReader, "-ns1:registerReader", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->registerReader(soap_tmp___ns1__registerReader.ns1__registerReader_, &ns1__registerReaderResponse_);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	ns1__registerReaderResponse_.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__registerReaderResponse_.soap_put(soap, "ns1:registerReaderResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__registerReaderResponse_.soap_put(soap, "ns1:registerReaderResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__getRedrTypes(LibServicePortBindingService *soap)
{	struct __ns1__getRedrTypes soap_tmp___ns1__getRedrTypes;
	ns1__getRedrTypesResponse ns1__getRedrTypesResponse_;
	ns1__getRedrTypesResponse_.soap_default(soap);
	soap_default___ns1__getRedrTypes(soap, &soap_tmp___ns1__getRedrTypes);
	soap->encodingStyle = NULL;
	if (!soap_get___ns1__getRedrTypes(soap, &soap_tmp___ns1__getRedrTypes, "-ns1:getRedrTypes", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->getRedrTypes(soap_tmp___ns1__getRedrTypes.ns1__getRedrTypes_, &ns1__getRedrTypesResponse_);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	ns1__getRedrTypesResponse_.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__getRedrTypesResponse_.soap_put(soap, "ns1:getRedrTypesResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__getRedrTypesResponse_.soap_put(soap, "ns1:getRedrTypesResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__getDeps(LibServicePortBindingService *soap)
{	struct __ns1__getDeps soap_tmp___ns1__getDeps;
	ns1__getDepsResponse ns1__getDepsResponse_;
	ns1__getDepsResponse_.soap_default(soap);
	soap_default___ns1__getDeps(soap, &soap_tmp___ns1__getDeps);
	soap->encodingStyle = NULL;
	if (!soap_get___ns1__getDeps(soap, &soap_tmp___ns1__getDeps, "-ns1:getDeps", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->getDeps(soap_tmp___ns1__getDeps.ns1__getDeps_, &ns1__getDepsResponse_);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	ns1__getDepsResponse_.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__getDepsResponse_.soap_put(soap, "ns1:getDepsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__getDepsResponse_.soap_put(soap, "ns1:getDepsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__getAccounts1(LibServicePortBindingService *soap)
{	struct __ns1__getAccounts1 soap_tmp___ns1__getAccounts1;
	ns1__getAccounts1Response ns1__getAccounts1Response_;
	ns1__getAccounts1Response_.soap_default(soap);
	soap_default___ns1__getAccounts1(soap, &soap_tmp___ns1__getAccounts1);
	soap->encodingStyle = NULL;
	if (!soap_get___ns1__getAccounts1(soap, &soap_tmp___ns1__getAccounts1, "-ns1:getAccounts1", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->getAccounts1(soap_tmp___ns1__getAccounts1.ns1__getAccounts1_, &ns1__getAccounts1Response_);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	ns1__getAccounts1Response_.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__getAccounts1Response_.soap_put(soap, "ns1:getAccounts1Response", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__getAccounts1Response_.soap_put(soap, "ns1:getAccounts1Response", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}
/* End of server object code */

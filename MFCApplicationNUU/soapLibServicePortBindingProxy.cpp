/* soapLibServicePortBindingProxy.cpp
   Generated by gSOAP 2.7.16 from LibServicePort.h
   Copyright(C) 2000-2010, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/
#include "stdafx.h"
#include "soapLibServicePortBindingProxy.h"

LibServicePortBindingProxy::LibServicePortBindingProxy()
{	LibServicePortBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

LibServicePortBindingProxy::LibServicePortBindingProxy(const struct soap &_soap) :soap(_soap)
{ }

LibServicePortBindingProxy::LibServicePortBindingProxy(soap_mode iomode)
{	LibServicePortBindingProxy_init(iomode, iomode);
}

LibServicePortBindingProxy::LibServicePortBindingProxy(soap_mode imode, soap_mode omode)
{	LibServicePortBindingProxy_init(imode, omode);
}

void LibServicePortBindingProxy::LibServicePortBindingProxy_init(soap_mode imode, soap_mode omode)
{	soap_imode(this, imode);
	soap_omode(this, omode);
	soap_endpoint = NULL;
	static const struct Namespace namespaces[] =
{
	{"SOAP-ENV", "http://schemas.xmlsoap.org/soap/envelope/", "http://www.w3.org/*/soap-envelope", NULL},
	{"SOAP-ENC", "http://schemas.xmlsoap.org/soap/encoding/", "http://www.w3.org/*/soap-encoding", NULL},
	{"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
	{"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
	{"ns1", "http://service.ws.hw.com/", NULL, NULL},
	{NULL, NULL, NULL, NULL}
};
	this->namespaces = namespaces;
}

LibServicePortBindingProxy::~LibServicePortBindingProxy()
{ }

void LibServicePortBindingProxy::destroy()
{	soap_destroy(this);
	soap_end(this);
}

void LibServicePortBindingProxy::soap_noheader()
{	header = NULL;
}

const SOAP_ENV__Fault *LibServicePortBindingProxy::soap_fault()
{	return this->fault;
}

const char *LibServicePortBindingProxy::soap_fault_string()
{	return *soap_faultstring(this);
}

const char *LibServicePortBindingProxy::soap_fault_detail()
{	return *soap_faultdetail(this);
}

int LibServicePortBindingProxy::soap_close_socket()
{	return soap_closesock(this);
}

void LibServicePortBindingProxy::soap_print_fault(FILE *fd)
{	::soap_print_fault(this, fd);
}

#ifndef WITH_LEAN
void LibServicePortBindingProxy::soap_stream_fault(std::ostream& os)
{	::soap_stream_fault(this, os);
}

char *LibServicePortBindingProxy::soap_sprint_fault(char *buf, size_t len)
{	return ::soap_sprint_fault(this, buf, len);
}
#endif

int LibServicePortBindingProxy::getReader(ns1__getReader *ns1__getReader_, ns1__getReaderResponse *ns1__getReaderResponse_)
{	struct soap *soap = this;
	struct __ns1__getReader soap_tmp___ns1__getReader;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "http://202.119.108.209:8080/HWWebService/LibServicePort";
	soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getReader.ns1__getReader_ = ns1__getReader_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getReader(soap, &soap_tmp___ns1__getReader);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getReader(soap, &soap_tmp___ns1__getReader, "-ns1:getReader", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getReader(soap, &soap_tmp___ns1__getReader, "-ns1:getReader", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__getReaderResponse_)
		return soap_closesock(soap);
	ns1__getReaderResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__getReaderResponse_->soap_get(soap, "ns1:getReaderResponse", "ns1:getReaderResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int LibServicePortBindingProxy::getItems(ns1__getItems *ns1__getItems_, ns1__getItemsResponse *ns1__getItemsResponse_)
{	struct soap *soap = this;
	struct __ns1__getItems soap_tmp___ns1__getItems;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "http://202.119.108.209:8080/HWWebService/LibServicePort";
	soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getItems.ns1__getItems_ = ns1__getItems_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getItems(soap, &soap_tmp___ns1__getItems);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getItems(soap, &soap_tmp___ns1__getItems, "-ns1:getItems", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getItems(soap, &soap_tmp___ns1__getItems, "-ns1:getItems", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__getItemsResponse_)
		return soap_closesock(soap);
	ns1__getItemsResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__getItemsResponse_->soap_get(soap, "ns1:getItemsResponse", "ns1:getItemsResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int LibServicePortBindingProxy::getBook(ns1__getBook *ns1__getBook_, ns1__getBookResponse *ns1__getBookResponse_)
{	struct soap *soap = this;
	struct __ns1__getBook soap_tmp___ns1__getBook;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "http://202.119.108.209:8080/HWWebService/LibServicePort";
	soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getBook.ns1__getBook_ = ns1__getBook_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getBook(soap, &soap_tmp___ns1__getBook);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getBook(soap, &soap_tmp___ns1__getBook, "-ns1:getBook", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getBook(soap, &soap_tmp___ns1__getBook, "-ns1:getBook", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__getBookResponse_)
		return soap_closesock(soap);
	ns1__getBookResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__getBookResponse_->soap_get(soap, "ns1:getBookResponse", "ns1:getBookResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int LibServicePortBindingProxy::getCircs(ns1__getCircs *ns1__getCircs_, ns1__getCircsResponse *ns1__getCircsResponse_)
{	struct soap *soap = this;
	struct __ns1__getCircs soap_tmp___ns1__getCircs;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "http://202.119.108.209:8080/HWWebService/LibServicePort";
	soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getCircs.ns1__getCircs_ = ns1__getCircs_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getCircs(soap, &soap_tmp___ns1__getCircs);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getCircs(soap, &soap_tmp___ns1__getCircs, "-ns1:getCircs", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getCircs(soap, &soap_tmp___ns1__getCircs, "-ns1:getCircs", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__getCircsResponse_)
		return soap_closesock(soap);
	ns1__getCircsResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__getCircsResponse_->soap_get(soap, "ns1:getCircsResponse", "ns1:getCircsResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int LibServicePortBindingProxy::getViolations(ns1__getViolations *ns1__getViolations_, ns1__getViolationsResponse *ns1__getViolationsResponse_)
{	struct soap *soap = this;
	struct __ns1__getViolations soap_tmp___ns1__getViolations;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "http://202.119.108.209:8080/HWWebService/LibServicePort";
	soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getViolations.ns1__getViolations_ = ns1__getViolations_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getViolations(soap, &soap_tmp___ns1__getViolations);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getViolations(soap, &soap_tmp___ns1__getViolations, "-ns1:getViolations", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getViolations(soap, &soap_tmp___ns1__getViolations, "-ns1:getViolations", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__getViolationsResponse_)
		return soap_closesock(soap);
	ns1__getViolationsResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__getViolationsResponse_->soap_get(soap, "ns1:getViolationsResponse", "ns1:getViolationsResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int LibServicePortBindingProxy::getDebts(ns1__getDebts *ns1__getDebts_, ns1__getDebtsResponse *ns1__getDebtsResponse_)
{	struct soap *soap = this;
	struct __ns1__getDebts soap_tmp___ns1__getDebts;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "http://202.119.108.209:8080/HWWebService/LibServicePort";
	soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getDebts.ns1__getDebts_ = ns1__getDebts_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getDebts(soap, &soap_tmp___ns1__getDebts);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getDebts(soap, &soap_tmp___ns1__getDebts, "-ns1:getDebts", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getDebts(soap, &soap_tmp___ns1__getDebts, "-ns1:getDebts", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__getDebtsResponse_)
		return soap_closesock(soap);
	ns1__getDebtsResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__getDebtsResponse_->soap_get(soap, "ns1:getDebtsResponse", "ns1:getDebtsResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int LibServicePortBindingProxy::getPregArrivals(ns1__getPregArrivals *ns1__getPregArrivals_, ns1__getPregArrivalsResponse *ns1__getPregArrivalsResponse_)
{	struct soap *soap = this;
	struct __ns1__getPregArrivals soap_tmp___ns1__getPregArrivals;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "http://202.119.108.209:8080/HWWebService/LibServicePort";
	soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getPregArrivals.ns1__getPregArrivals_ = ns1__getPregArrivals_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getPregArrivals(soap, &soap_tmp___ns1__getPregArrivals);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getPregArrivals(soap, &soap_tmp___ns1__getPregArrivals, "-ns1:getPregArrivals", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getPregArrivals(soap, &soap_tmp___ns1__getPregArrivals, "-ns1:getPregArrivals", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__getPregArrivalsResponse_)
		return soap_closesock(soap);
	ns1__getPregArrivalsResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__getPregArrivalsResponse_->soap_get(soap, "ns1:getPregArrivalsResponse", "ns1:getPregArrivalsResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int LibServicePortBindingProxy::getRelegateArrivals(ns1__getRelegateArrivals *ns1__getRelegateArrivals_, ns1__getRelegateArrivalsResponse *ns1__getRelegateArrivalsResponse_)
{	struct soap *soap = this;
	struct __ns1__getRelegateArrivals soap_tmp___ns1__getRelegateArrivals;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "http://202.119.108.209:8080/HWWebService/LibServicePort";
	soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getRelegateArrivals.ns1__getRelegateArrivals_ = ns1__getRelegateArrivals_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getRelegateArrivals(soap, &soap_tmp___ns1__getRelegateArrivals);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getRelegateArrivals(soap, &soap_tmp___ns1__getRelegateArrivals, "-ns1:getRelegateArrivals", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getRelegateArrivals(soap, &soap_tmp___ns1__getRelegateArrivals, "-ns1:getRelegateArrivals", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__getRelegateArrivalsResponse_)
		return soap_closesock(soap);
	ns1__getRelegateArrivalsResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__getRelegateArrivalsResponse_->soap_get(soap, "ns1:getRelegateArrivalsResponse", "ns1:getRelegateArrivalsResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int LibServicePortBindingProxy::getPregs(ns1__getPregs *ns1__getPregs_, ns1__getPregsResponse *ns1__getPregsResponse_)
{	struct soap *soap = this;
	struct __ns1__getPregs soap_tmp___ns1__getPregs;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "http://202.119.108.209:8080/HWWebService/LibServicePort";
	soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getPregs.ns1__getPregs_ = ns1__getPregs_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getPregs(soap, &soap_tmp___ns1__getPregs);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getPregs(soap, &soap_tmp___ns1__getPregs, "-ns1:getPregs", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getPregs(soap, &soap_tmp___ns1__getPregs, "-ns1:getPregs", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__getPregsResponse_)
		return soap_closesock(soap);
	ns1__getPregsResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__getPregsResponse_->soap_get(soap, "ns1:getPregsResponse", "ns1:getPregsResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int LibServicePortBindingProxy::getRelegates(ns1__getRelegates *ns1__getRelegates_, ns1__getRelegatesResponse *ns1__getRelegatesResponse_)
{	struct soap *soap = this;
	struct __ns1__getRelegates soap_tmp___ns1__getRelegates;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "http://202.119.108.209:8080/HWWebService/LibServicePort";
	soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getRelegates.ns1__getRelegates_ = ns1__getRelegates_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getRelegates(soap, &soap_tmp___ns1__getRelegates);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getRelegates(soap, &soap_tmp___ns1__getRelegates, "-ns1:getRelegates", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getRelegates(soap, &soap_tmp___ns1__getRelegates, "-ns1:getRelegates", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__getRelegatesResponse_)
		return soap_closesock(soap);
	ns1__getRelegatesResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__getRelegatesResponse_->soap_get(soap, "ns1:getRelegatesResponse", "ns1:getRelegatesResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int LibServicePortBindingProxy::getAccounts(ns1__getAccounts *ns1__getAccounts_, ns1__getAccountsResponse *ns1__getAccountsResponse_)
{	struct soap *soap = this;
	struct __ns1__getAccounts soap_tmp___ns1__getAccounts;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "http://202.119.108.209:8080/HWWebService/LibServicePort";
	soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getAccounts.ns1__getAccounts_ = ns1__getAccounts_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getAccounts(soap, &soap_tmp___ns1__getAccounts);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getAccounts(soap, &soap_tmp___ns1__getAccounts, "-ns1:getAccounts", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getAccounts(soap, &soap_tmp___ns1__getAccounts, "-ns1:getAccounts", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__getAccountsResponse_)
		return soap_closesock(soap);
	ns1__getAccountsResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__getAccountsResponse_->soap_get(soap, "ns1:getAccountsResponse", "ns1:getAccountsResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int LibServicePortBindingProxy::getLostPays(ns1__getLostPays *ns1__getLostPays_, ns1__getLostPaysResponse *ns1__getLostPaysResponse_)
{	struct soap *soap = this;
	struct __ns1__getLostPays soap_tmp___ns1__getLostPays;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "http://202.119.108.209:8080/HWWebService/LibServicePort";
	soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getLostPays.ns1__getLostPays_ = ns1__getLostPays_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getLostPays(soap, &soap_tmp___ns1__getLostPays);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getLostPays(soap, &soap_tmp___ns1__getLostPays, "-ns1:getLostPays", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getLostPays(soap, &soap_tmp___ns1__getLostPays, "-ns1:getLostPays", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__getLostPaysResponse_)
		return soap_closesock(soap);
	ns1__getLostPaysResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__getLostPaysResponse_->soap_get(soap, "ns1:getLostPaysResponse", "ns1:getLostPaysResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int LibServicePortBindingProxy::exceedFine(ns1__exceedFine *ns1__exceedFine_, ns1__exceedFineResponse *ns1__exceedFineResponse_)
{	struct soap *soap = this;
	struct __ns1__exceedFine soap_tmp___ns1__exceedFine;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "http://202.119.108.209:8080/HWWebService/LibServicePort";
	soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__exceedFine.ns1__exceedFine_ = ns1__exceedFine_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__exceedFine(soap, &soap_tmp___ns1__exceedFine);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__exceedFine(soap, &soap_tmp___ns1__exceedFine, "-ns1:exceedFine", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__exceedFine(soap, &soap_tmp___ns1__exceedFine, "-ns1:exceedFine", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__exceedFineResponse_)
		return soap_closesock(soap);
	ns1__exceedFineResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__exceedFineResponse_->soap_get(soap, "ns1:exceedFineResponse", "ns1:exceedFineResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int LibServicePortBindingProxy::certLoss(ns1__certLoss *ns1__certLoss_, ns1__certLossResponse *ns1__certLossResponse_)
{	struct soap *soap = this;
	struct __ns1__certLoss soap_tmp___ns1__certLoss;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "http://202.119.108.209:8080/HWWebService/LibServicePort";
	soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__certLoss.ns1__certLoss_ = ns1__certLoss_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__certLoss(soap, &soap_tmp___ns1__certLoss);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__certLoss(soap, &soap_tmp___ns1__certLoss, "-ns1:certLoss", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__certLoss(soap, &soap_tmp___ns1__certLoss, "-ns1:certLoss", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__certLossResponse_)
		return soap_closesock(soap);
	ns1__certLossResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__certLossResponse_->soap_get(soap, "ns1:certLossResponse", "ns1:certLossResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int LibServicePortBindingProxy::logout(ns1__logout *ns1__logout_, ns1__logoutResponse *ns1__logoutResponse_)
{	struct soap *soap = this;
	struct __ns1__logout soap_tmp___ns1__logout;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "http://202.119.108.209:8080/HWWebService/LibServicePort";
	soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__logout.ns1__logout_ = ns1__logout_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__logout(soap, &soap_tmp___ns1__logout);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__logout(soap, &soap_tmp___ns1__logout, "-ns1:logout", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__logout(soap, &soap_tmp___ns1__logout, "-ns1:logout", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__logoutResponse_)
		return soap_closesock(soap);
	ns1__logoutResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__logoutResponse_->soap_get(soap, "ns1:logoutResponse", "ns1:logoutResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int LibServicePortBindingProxy::getLendHist(ns1__getLendHist *ns1__getLendHist_, ns1__getLendHistResponse *ns1__getLendHistResponse_)
{	struct soap *soap = this;
	struct __ns1__getLendHist soap_tmp___ns1__getLendHist;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "http://202.119.108.209:8080/HWWebService/LibServicePort";
	soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getLendHist.ns1__getLendHist_ = ns1__getLendHist_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getLendHist(soap, &soap_tmp___ns1__getLendHist);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getLendHist(soap, &soap_tmp___ns1__getLendHist, "-ns1:getLendHist", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getLendHist(soap, &soap_tmp___ns1__getLendHist, "-ns1:getLendHist", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__getLendHistResponse_)
		return soap_closesock(soap);
	ns1__getLendHistResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__getLendHistResponse_->soap_get(soap, "ns1:getLendHistResponse", "ns1:getLendHistResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int LibServicePortBindingProxy::getMarc(ns1__getMarc *ns1__getMarc_, ns1__getMarcResponse *ns1__getMarcResponse_)
{	struct soap *soap = this;
	struct __ns1__getMarc soap_tmp___ns1__getMarc;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "http://202.119.108.209:8080/HWWebService/LibServicePort";
	soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getMarc.ns1__getMarc_ = ns1__getMarc_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getMarc(soap, &soap_tmp___ns1__getMarc);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getMarc(soap, &soap_tmp___ns1__getMarc, "-ns1:getMarc", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getMarc(soap, &soap_tmp___ns1__getMarc, "-ns1:getMarc", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__getMarcResponse_)
		return soap_closesock(soap);
	ns1__getMarcResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__getMarcResponse_->soap_get(soap, "ns1:getMarcResponse", "ns1:getMarcResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int LibServicePortBindingProxy::checkReader(ns1__checkReader *ns1__checkReader_, ns1__checkReaderResponse *ns1__checkReaderResponse_)
{	struct soap *soap = this;
	struct __ns1__checkReader soap_tmp___ns1__checkReader;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "http://202.119.108.209:8080/HWWebService/LibServicePort";
	soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__checkReader.ns1__checkReader_ = ns1__checkReader_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__checkReader(soap, &soap_tmp___ns1__checkReader);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__checkReader(soap, &soap_tmp___ns1__checkReader, "-ns1:checkReader", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__checkReader(soap, &soap_tmp___ns1__checkReader, "-ns1:checkReader", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__checkReaderResponse_)
		return soap_closesock(soap);
	ns1__checkReaderResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__checkReaderResponse_->soap_get(soap, "ns1:checkReaderResponse", "ns1:checkReaderResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int LibServicePortBindingProxy::voltFine(ns1__voltFine *ns1__voltFine_, ns1__voltFineResponse *ns1__voltFineResponse_)
{	struct soap *soap = this;
	struct __ns1__voltFine soap_tmp___ns1__voltFine;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "http://202.119.108.209:8080/HWWebService/LibServicePort";
	soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__voltFine.ns1__voltFine_ = ns1__voltFine_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__voltFine(soap, &soap_tmp___ns1__voltFine);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__voltFine(soap, &soap_tmp___ns1__voltFine, "-ns1:voltFine", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__voltFine(soap, &soap_tmp___ns1__voltFine, "-ns1:voltFine", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__voltFineResponse_)
		return soap_closesock(soap);
	ns1__voltFineResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__voltFineResponse_->soap_get(soap, "ns1:voltFineResponse", "ns1:voltFineResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int LibServicePortBindingProxy::getViolations1(ns1__getViolations1 *ns1__getViolations1_, ns1__getViolations1Response *ns1__getViolations1Response_)
{	struct soap *soap = this;
	struct __ns1__getViolations1 soap_tmp___ns1__getViolations1;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "http://202.119.108.209:8080/HWWebService/LibServicePort";
	soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getViolations1.ns1__getViolations1_ = ns1__getViolations1_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getViolations1(soap, &soap_tmp___ns1__getViolations1);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getViolations1(soap, &soap_tmp___ns1__getViolations1, "-ns1:getViolations1", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getViolations1(soap, &soap_tmp___ns1__getViolations1, "-ns1:getViolations1", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__getViolations1Response_)
		return soap_closesock(soap);
	ns1__getViolations1Response_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__getViolations1Response_->soap_get(soap, "ns1:getViolations1Response", "ns1:getViolations1Response");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int LibServicePortBindingProxy::exceedFine1(ns1__exceedFine1 *ns1__exceedFine1_, ns1__exceedFine1Response *ns1__exceedFine1Response_)
{	struct soap *soap = this;
	struct __ns1__exceedFine1 soap_tmp___ns1__exceedFine1;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "http://202.119.108.209:8080/HWWebService/LibServicePort";
	soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__exceedFine1.ns1__exceedFine1_ = ns1__exceedFine1_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__exceedFine1(soap, &soap_tmp___ns1__exceedFine1);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__exceedFine1(soap, &soap_tmp___ns1__exceedFine1, "-ns1:exceedFine1", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__exceedFine1(soap, &soap_tmp___ns1__exceedFine1, "-ns1:exceedFine1", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__exceedFine1Response_)
		return soap_closesock(soap);
	ns1__exceedFine1Response_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__exceedFine1Response_->soap_get(soap, "ns1:exceedFine1Response", "ns1:exceedFine1Response");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int LibServicePortBindingProxy::registerReader(ns1__registerReader *ns1__registerReader_, ns1__registerReaderResponse *ns1__registerReaderResponse_)
{	struct soap *soap = this;
	struct __ns1__registerReader soap_tmp___ns1__registerReader;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "http://202.119.108.209:8080/HWWebService/LibServicePort";
	soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__registerReader.ns1__registerReader_ = ns1__registerReader_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__registerReader(soap, &soap_tmp___ns1__registerReader);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__registerReader(soap, &soap_tmp___ns1__registerReader, "-ns1:registerReader", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__registerReader(soap, &soap_tmp___ns1__registerReader, "-ns1:registerReader", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__registerReaderResponse_)
		return soap_closesock(soap);
	ns1__registerReaderResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__registerReaderResponse_->soap_get(soap, "ns1:registerReaderResponse", "ns1:registerReaderResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int LibServicePortBindingProxy::getRedrTypes(ns1__getRedrTypes *ns1__getRedrTypes_, ns1__getRedrTypesResponse *ns1__getRedrTypesResponse_)
{	struct soap *soap = this;
	struct __ns1__getRedrTypes soap_tmp___ns1__getRedrTypes;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "http://202.119.108.209:8080/HWWebService/LibServicePort";
	soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getRedrTypes.ns1__getRedrTypes_ = ns1__getRedrTypes_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getRedrTypes(soap, &soap_tmp___ns1__getRedrTypes);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getRedrTypes(soap, &soap_tmp___ns1__getRedrTypes, "-ns1:getRedrTypes", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getRedrTypes(soap, &soap_tmp___ns1__getRedrTypes, "-ns1:getRedrTypes", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__getRedrTypesResponse_)
		return soap_closesock(soap);
	ns1__getRedrTypesResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__getRedrTypesResponse_->soap_get(soap, "ns1:getRedrTypesResponse", "ns1:getRedrTypesResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int LibServicePortBindingProxy::getDeps(ns1__getDeps *ns1__getDeps_, ns1__getDepsResponse *ns1__getDepsResponse_)
{	struct soap *soap = this;
	struct __ns1__getDeps soap_tmp___ns1__getDeps;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "http://202.119.108.209:8080/HWWebService/LibServicePort";
	soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getDeps.ns1__getDeps_ = ns1__getDeps_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getDeps(soap, &soap_tmp___ns1__getDeps);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getDeps(soap, &soap_tmp___ns1__getDeps, "-ns1:getDeps", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getDeps(soap, &soap_tmp___ns1__getDeps, "-ns1:getDeps", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__getDepsResponse_)
		return soap_closesock(soap);
	ns1__getDepsResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__getDepsResponse_->soap_get(soap, "ns1:getDepsResponse", "ns1:getDepsResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int LibServicePortBindingProxy::getAccounts1(ns1__getAccounts1 *ns1__getAccounts1_, ns1__getAccounts1Response *ns1__getAccounts1Response_)
{	struct soap *soap = this;
	struct __ns1__getAccounts1 soap_tmp___ns1__getAccounts1;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "http://202.119.108.209:8080/HWWebService/LibServicePort";
	soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getAccounts1.ns1__getAccounts1_ = ns1__getAccounts1_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getAccounts1(soap, &soap_tmp___ns1__getAccounts1);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getAccounts1(soap, &soap_tmp___ns1__getAccounts1, "-ns1:getAccounts1", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getAccounts1(soap, &soap_tmp___ns1__getAccounts1, "-ns1:getAccounts1", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__getAccounts1Response_)
		return soap_closesock(soap);
	ns1__getAccounts1Response_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__getAccounts1Response_->soap_get(soap, "ns1:getAccounts1Response", "ns1:getAccounts1Response");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
/* End of client proxy code */
